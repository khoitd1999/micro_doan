# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
version: '3.7'

services:
  # Registration service
  registration:
    image: khoitd1999/discovery_doan:v1
    container_name: discovery_doan
    build:
      context: Discovery
      dockerfile: Dockerfile
    hostname: eureka
    ports:
      - "8761:8761"
    restart: always 
    networks:
      - registration-network
    
   # Redis Service
  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    hostname: rds
    restart: always
    networks:
      - redis-network

  # Gateway Service
  gateway:
    image: khoitd1999/gateway_doan:v1
    container_name: gateway_doan
    build:
      context: Gateway
      dockerfile: Dockerfile
    ports:
      - "1999:1999"
    restart: always
    depends_on:
      - registration
      - redis
    networks:
      - registration-network
      - redis-network

  # Postgresql Service
  db:
    image: postgres
    container_name: postgresdb_doan
    restart: always
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456a@
      - POSTGRES_DB=newdb
    volumes:
      - postgres_db:/var/lib/postgresql/data
      - ./db/init_v2.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - postgres-network

  # RabbitMQ Service
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_doan
    restart: always
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - rabbitmq-network

  # Users Service
  users:
    image: khoitd1999/users_doan:v1
    container_name: users_doan
    build:
      context: usermodule
      dockerfile: Dockerfile
    restart: always
    ports:
      - "2000:2000"
    depends_on:
      - registration
      - rabbitmq
      - db
    networks:
      - registration-network
      - rabbitmq-network
      - postgres-network
  
  # Common Service
  common:
    image: khoitd1999/common_doan:v1
    container_name: common_doan
    build:
      context: commonmodule
      dockerfile: Dockerfile
    restart: always
    ports:
      - "2001:2001"
    depends_on:
      - registration
      - rabbitmq
      - db
    networks:
      - registration-network
      - rabbitmq-network
      - postgres-network

  # Product Service
  product:
    image: khoitd1999/product_doan:v1
    container_name: product_doan
    build:
      context: productmodule
      dockerfile: Dockerfile
    restart: always
    ports:
      - "2002:2002"
    depends_on:
      - registration
      - rabbitmq
      - db
    networks:
      - registration-network
      - rabbitmq-network
      - postgres-network

  # Order Service
  order:
    image: khoitd1999/order_doan:v1
    container_name: order_doan
    build:
      context: ordermodule
      dockerfile: Dockerfile
    restart: always
    ports:
      - "2003:2003"
    depends_on:
      - registration
      - rabbitmq
      - db
    networks:
      - registration-network
      - rabbitmq-network
      - postgres-network

  # Frontend Service
  frontend:
    image: khoitd1999/frontend_doan:v1
    container_name: frontend_doan
    build:
      context: frontendmodule
      dockerfile: Dockerfile
    restart: always
    ports:
      - '80:4200'
    depends_on:
      - gateway
      - users
      - common
      - product
      - order

volumes:
  postgres_db:

# Networks to be created to facilitate communication between containers
networks:
  registration-network:
  redis-network:
  rabbitmq-network:
  postgres-network:
  frontend-network: